.stripView {
    width: @strip-view-open-width;
    position: absolute;
    top: 0;
    right: 0;
    bottom: @command-bar-height;
    margin: 0 auto;
    font-family: Monospace, serif;
    font-size: 12px;
    max-width: 500px;
    background-color: @dark-06;
    box-sizing: border-box;
    transition: all ease-in-out 0.3s;
    z-index: 100;
}

.mix-stripView_isHidden {
    right: -390px;
}

.stripTitle {
    background-color: #222222;
    color: #ffffff;
    font-size: 1.25em;
    padding: 5px 0;
    text-align: center;
}

.stripView-list {
    // LESS itself tries to evaluate calc(), using ~"" here to prevent that
    width: ~"calc(100% - " @spacing-2x ~")";
    overflow-y: scroll;
    list-style-type: none;
    height: ~"calc(50% - 1.25em - 10px)";
    display: flex;
    flex-direction: column;
}

.stripViewItem {
    border: 1px solid #222;
    transition: ease-in-out margin 0.15s;
}

.stripViewItem:first-child {
    margin-top: auto;
}

.active,
.stripViewItem:hover {
    margin-left: @spacing-1x;
    cursor: pointer;
}

.stripView-list > * + * {
    margin-top: 3px;
    border-top: none;
}

.stripViewItem-table {
    width: 100%;
    background-color: @white;
    border-collapse: collapse;
    box-sizing: border-box;
}

.stripView-table-td {
    padding: 3px @spacing-1x;
    text-align: center;
    overflow: hidden;
    vertical-align: top;
    box-sizing: border-box;
}

.stripView-table-td + .stripView-table-td {
    border-left: 1px solid
}

.stripView-table-td > span {
    float: right;
}

.stripView-table-tr > .stripView-table-td:nth-child(0n+1) {
    width: 70px;
    text-align: left;
}

.stripView-table-tr > .stripView-table-td:nth-child(0n+2),
.stripView-table-tr > .stripView-table-td:nth-child(0n+3) {
    width: 50px;
}

.stripView-table-tr > .stripView-table-td:nth-child(0n+4) {
    text-align: left;
}

.stripView-table-tr > .stripView-table-td:nth-child(0n+5) {
    width: 50px;
    text-align: right;
    border: none;
}

.stripView-preplanning {
    color: red;
}

.mix-stripView-table_borderTop {
    border-top: 1px solid;
}

.stripView-trigger {
    height: 100%;
    width: 10px;
    float: left;
    background-color: @dark-06;
    cursor: pointer;
}

.stripView-trigger:after {
    position: absolute;
    top: 40%;
    left: -25px;
    padding: 20px 6px;
    color: @white;
    font-weight: 700;
    content: ">|";
    border-radius: 8px 0 0 8px;
}

.mix-stripView_isHidden .stripView-trigger:after {
    border-radius: 0 8px 8px 0;
    transform: rotateY(-180deg);
}

// grouped styles for open/close hover/no hover styles
.mix-stripView_isHidden .stripView-trigger,
.mix-stripView_isHidden .stripView-trigger:after {
    background-color: @background-dark;
}

.mix-stripView_isHidden .stripView-trigger:hover,
.mix-stripView_isHidden .stripView-trigger:hover:after {
    background-color: @dark-06;
}

.stripView-trigger {
    // using transparent here so our rgba() opacity values don't stack up
    background-color: transparent;
}

.stripView-trigger:after {
    background-color: @dark-06;
}

.stripView-trigger:hover,
.stripView-trigger:hover:after {
    background-color: @background-dark;
}

// TODO: rename these to follow js classname conventions (ex: `.js-isDeparture`)
// these classes are added by JS
.departure {
    border-left: 5px solid @departure-accent;
}

.arrival {
    border-left: 5px solid @arrival-accent;
}

.overflight {
    border-left: 5px solid @overflight-accent;
}
